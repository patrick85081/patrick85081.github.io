<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WinAPI on 派翠克技術手札</title><link>https://patrick85081.github.io/tags/winapi/</link><description>Recent content in WinAPI on 派翠克技術手札</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Fri, 20 Nov 2020 20:12:59 +0800</lastBuildDate><atom:link href="https://patrick85081.github.io/tags/winapi/index.xml" rel="self" type="application/rss+xml"/><item><title>WinForm 內部對話框，標題拖曳功能</title><link>https://patrick85081.github.io/posts/2020-11-20-winform-drag-inner-dialog-panel/</link><pubDate>Fri, 20 Nov 2020 20:12:59 +0800</pubDate><guid>https://patrick85081.github.io/posts/2020-11-20-winform-drag-inner-dialog-panel/</guid><description>開發 WinForm 時，要做到WinForm內部對話框，而且又可以按住標題拖曳的效果，可以透過Panel手刻出對話框，透過WinAPI做到拖曳效果。
public partial class Form1 : Form { [DllImport(&amp;#34;user32.dll&amp;#34;)] public static extern bool ReleaseCapture(); [DllImport(&amp;#34;user32.dll&amp;#34;)] public static extern bool SendMessage(IntPtr hwnd, int wMsg, int wParam, int lParam); public Form1() { InitializeComponent(); } private void DialogTitle_MouseDown(object sender, MouseEventArgs e) { if (e.Button == MouseButtons.Left) { //釋放鼠標捕捉 ReleaseCapture(); //發送左鍵點擊的消息至該視窗 SendMessage(FrocePanel1.Handle, 0xA1, 0x02, 0); } } } 範例程式碼</description></item></channel></rss>
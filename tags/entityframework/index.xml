<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EntityFramework on 派翠克技術手札</title><link>https://patrick85081.github.io/tags/entityframework/</link><description>Recent content in EntityFramework on 派翠克技術手札</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Wed, 30 Mar 2022 13:12:45 +0800</lastBuildDate><atom:link href="https://patrick85081.github.io/tags/entityframework/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL 批次刪除，資料轉型失敗問題</title><link>https://patrick85081.github.io/posts/2022-03-29-entityframework-batch-delete-cast-not-valid/</link><pubDate>Wed, 30 Mar 2022 13:12:45 +0800</pubDate><guid>https://patrick85081.github.io/posts/2022-03-29-entityframework-batch-delete-cast-not-valid/</guid><description>原由 最近碰到一個有去的錯誤，當透過EntityFrameworkPlus 做資料庫資料批次刪除，結果卻回傳InvalidCastException，但是卻只有這個DB才有此問題，這問題真叫人苦惱。
原程式很單純，大致上如下：
dataContext.Employees .Where(e =&amp;gt; e.Year &amp;gt; 30) .Delete(); 結果 結果發現因之前有資料庫除錯上需求，在該資料表加入 Delete Trigger，應該要 Insert 刪除記錄到另一張表，卻寫成資料 Select。
陰錯陽差之下在 Entity Framework Plus 下達刪除命令後，會去抓資料庫回傳的影響資料筆數，卻抓到 Trigger 產生出來的資料，造成使用該資料的第一個Row第一個Column資料，轉型成 影響筆數 （Int32） 才出的錯誤，結案。</description></item><item><title>EF6 資料庫欄位預設值</title><link>https://patrick85081.github.io/posts/2022-01-24-ef6-sql-default-value/</link><pubDate>Mon, 24 Jan 2022 22:19:36 +0800</pubDate><guid>https://patrick85081.github.io/posts/2022-01-24-ef6-sql-default-value/</guid><description>有接觸過SQL的朋友應該都知道資料庫欄位有個功能可以設定預設值，當新增資料時此欄位沒給資料時，資料庫會自動賦予預設值，這個需求再簡單不過了，但是在EF6上解法稍微複雜一些，而且還不能跨資料庫，因為它有部分是調用原始SQL方式，不過這裡先記錄一下方法。
EntityFramework6是一個很不錯的ORM框架，但是它在某些資料庫較為細節的部分有些不夠完善，有些在EntityFrameworkCore都有簡單的解決方法，因為歷史包袱還是要繞些遠路。
方法一 C# 端解決方案 這種方式在SQL端還是沒有預設值，但是使用C#物件屬性預設值的方式，如果以完美主義的角度來說還是不夠。
public class MyEntity { public string Json { get; set; } = &amp;#34;{}&amp;#34;; } 方法二 Entity Framework 6 Default Value For Sql .Net 已經內建 DefaultValueAttribute ，所以我們就不另外建立。
DbContext 增加 Conventions，將DefaultValueAttribute 對應到字串資料上 public class DataContext : DbContext { protected override void OnModelCreating(DbModelBuilder modelBuilder) { modelBuilder.Conventions.Add(new AttributeToColumnAnnotationConvention&amp;lt;DefaultValueAttribute, string&amp;gt;( &amp;#34;SqlDefaultValue&amp;#34;, (p, attribute) =&amp;gt; attribute.SingleOrDefault().Value.ToString())); } } Entity 中增加 DefaultValue，裡面可以增加預設值，除了填寫常數以外，也可以填寫gettime()之類的SQL方法，功能也就更多元。 public class MyEntity { [DefaultValue(&amp;#34;&amp;#39;{}&amp;#39;&amp;#34;)] public string Json { get; set; } = &amp;#34;{}&amp;#34;; } 增加 MigrationSqlGenerator，在新增資料表、修改資料表、新增欄位、修改欄位時去修改預設值，但是移除預設值時會去執行指定的SQL語法。 internal class DefaultValueSqlServerMigrationSqlGenerator : SqlServerMigrationSqlGenerator { private int dropConstraintCount; protected override void Generate(AddColumnOperation addColumnOperation) { SetAnnotatedColumn(addColumnOperation.</description></item><item><title>動態切換 EF6 設定檔中的SQL Provider</title><link>https://patrick85081.github.io/posts/2022-01-19-ef6-configuration-by-code/</link><pubDate>Wed, 19 Jan 2022 22:02:49 +0800</pubDate><guid>https://patrick85081.github.io/posts/2022-01-19-ef6-configuration-by-code/</guid><description>我們都知道Entity Framework 6的設定是儲存在 app.config/Web.config，但是如果我想要在程式中動態切換他的SQL Provider時候應該怎麼做呢?
Use Config by file 正常的 app.config / web.config 都有以下設定，記錄著有哪些 SQL Provider，還有連線字串的資訊。
&amp;lt;!-- 必備橋段 --&amp;gt; &amp;lt;entityFramework&amp;gt; &amp;lt;providers&amp;gt; &amp;lt;provider invariantName=&amp;#34;System.Data.SqlClient&amp;#34; type=&amp;#34;System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer&amp;#34; /&amp;gt; &amp;lt;!-- SQLite Provider --&amp;gt; &amp;lt;provider invariantName=&amp;#34;System.Data.SQLite.EF6&amp;#34; type=&amp;#34;System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6&amp;#34; /&amp;gt; &amp;lt;provider invariantName=&amp;#34;System.Data.SQLite&amp;#34; type=&amp;#34;System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6&amp;#34; /&amp;gt; &amp;lt;/providers&amp;gt; &amp;lt;/entityFramework&amp;gt; &amp;lt;!-- 選配橋段 --&amp;gt; &amp;lt;connectionStrings&amp;gt; &amp;lt;add name=&amp;#34;DefaultConnection&amp;#34; connectionString=&amp;#34;data source=lab.db&amp;#34; providerName=&amp;#34;System.Data.SQLite&amp;#34; /&amp;gt; &amp;lt;/connectionStrings&amp;gt; Use DbConfiguration by code 實作 DbConfiguration，等同於 xml entityFramework/providers/provider 設定 有三個步驟
註冊 EF Provider Factory 註冊 EF Provider Service 註冊 Db Provider Factory public class SqliteConfig : DbConfiguration { public SqliteConfig() { // Register EF Provider Factory SetProviderFactory(&amp;#34;System.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Halcon on 派翠克技術手札</title><link>https://patrick85081.github.io/tags/halcon/</link><description>Recent content in Halcon on 派翠克技術手札</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Tue, 22 Mar 2022 22:18:52 +0800</lastBuildDate><atom:link href="https://patrick85081.github.io/tags/halcon/index.xml" rel="self" type="application/rss+xml"/><item><title>Halcon 常用的Function</title><link>https://patrick85081.github.io/posts/2022-03-22-halcon-note/halcon-note/</link><pubDate>Tue, 22 Mar 2022 22:18:52 +0800</pubDate><guid>https://patrick85081.github.io/posts/2022-03-22-halcon-note/halcon-note/</guid><description>影像分割 固定二值化 // P3, P4 =&amp;gt; 二值化閥值區間 threshold(GrayImage, DarkArea, 0, 128) 直方圖自動二值化 // P3 =&amp;gt; Sigma 高斯運算 平滑算子 auto_threshold(GrayImage, DarkArea, 8.0) P.S. 可用 gray_histo or gen_region_histo 查看直方圖
自動全局二值化 利用直方圖像素分佈，例如最大類間方插法或平滑直方圖法
// P3 =&amp;gt; 二值化的方法 // max_separability 直方圖中最大的可分性分割 // smooth_histo 平滑直方圖 // P4 =&amp;gt; 取 亮部 light 還是 暗部 dark // P5 =&amp;gt; 輸出 自動二值化使用的閥值 binary_threshold(GrayImage, DarkArea, &amp;#39;max_separability&amp;#39;, &amp;#39;dark&amp;#39;, UsedThreshold) 局部閥值分割法 適用於無法用單一灰階分割情況，如背景複雜，亮暗不均
步驟
套用平滑濾波器 使用dyn_threshold 比較 原始圖像 與 套用平滑濾波器 後的影像差異，將差異大於設定值的點找出來 // P3 =&amp;gt; 輸出的閥值區域 // P4 =&amp;gt; Offset 值，比較後大於該值將被提取出來 // P5 =&amp;gt; 哪個區域 // light 原圖 &amp;gt;= 平滑後 + Offset // dark 原圖 &amp;lt;= 平滑後 - Offset // equal (平滑後 + Offset) &amp;lt; 原圖 &amp;lt; (平滑後 - Offset) // not_equal (平滑後 + Offset) &amp;gt;= 原圖 Or 原圖 &amp;gt;= (平滑後 - Offset) dyn_threshold(Image, ImageMean, RegionDynThresh, 4, &amp;#39;not_equal&amp;#39;) Var_Threshold // P3, P4 =&amp;gt; Mask 長寬 // P5 =&amp;gt; 標準差因子 // P6 =&amp;gt; 絕對閥值 // P7 =&amp;gt; dark, light, equal, not_equal var_threshold(Image, Region, 15, 15, 0.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>派翠克技術手札</title><link>http://example.org/</link><description>Recent content on 派翠克技術手札</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Sat, 26 Mar 2022 15:38:18 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>2022 03 26 Ldap 資料查詢</title><link>http://example.org/posts/2022-03-26-ldap-connection/</link><pubDate>Sat, 26 Mar 2022 15:38:18 +0800</pubDate><guid>http://example.org/posts/2022-03-26-ldap-connection/</guid><description>Ldap 連線 之前接手的程式碼是使用DirectoryEntry來做Ldap連線，但一直試不出來Ssl連線，後來查了一下，原來可以使用LdapConnection，這裡來記錄一下它的使用方式。
Nuget 安裝 dotnet add package System.DirectoryServices.Protocol
Simple Bind var ldap = new LdapConnection(&amp;#34;192.168.10.201:389&amp;#34;); ldap.AuthType = AuthType.Basic; ldap.SessionOptions.ProtocolVersion = 3; // 登入 ldap.Bind(new NetworkCredential(&amp;#34;Account&amp;#34;, &amp;#34;Password&amp;#34;)); Sals var ldap = new LdapConnection(&amp;#34;192.168.10.201:389&amp;#34;); // Sasl ldap.AuthType = AuthType.Negotiate; ldap.SessionOptions.ProtocolVersion = 3; //ldap.SessionOptions.Signing = true; //ldap.SessionOptions.Sealing = true; // 登入 ldap.Bind(new NetworkCredential(&amp;#34;Account&amp;#34;, &amp;#34;Password&amp;#34;)); SSL var ldap = new LdapConnection(&amp;#34;192.168.10.201:636&amp;#34;); ldap.AuthType = AuthType.Basic; ldap.SessionOptions.ProtocolVersion = 3; // SSL ldap.SessionOptions.SecureSocketLayer = true; // 略過 憑證檢查 ldap.</description></item><item><title>Halcon 常用的Function</title><link>http://example.org/posts/2022-03-22-halcon-note/halcon-note/</link><pubDate>Tue, 22 Mar 2022 22:18:52 +0800</pubDate><guid>http://example.org/posts/2022-03-22-halcon-note/halcon-note/</guid><description>影像分割 固定二值化 // P3, P4 =&amp;gt; 二值化閥值區間 threshold(GrayImage, DarkArea, 0, 128) 直方圖自動二值化 // P3 =&amp;gt; Sigma 高斯運算 平滑算子 auto_threshold(GrayImage, DarkArea, 8.0) P.S. 可用 gray_histo or gen_region_histo 查看直方圖
自動全局二值化 利用直方圖像素分佈，例如最大類間方插法或平滑直方圖法
// P3 =&amp;gt; 二值化的方法 // max_separability 直方圖中最大的可分性分割 // smooth_histo 平滑直方圖 // P4 =&amp;gt; 取 亮部 light 還是 暗部 dark // P5 =&amp;gt; 輸出 自動二值化使用的閥值 binary_threshold(GrayImage, DarkArea, &amp;#39;max_separability&amp;#39;, &amp;#39;dark&amp;#39;, UsedThreshold) 局部閥值分割法 適用於無法用單一灰階分割情況，如背景複雜，亮暗不均
步驟
套用平滑濾波器 使用dyn_threshold 比較 原始圖像 與 套用平滑濾波器 後的影像差異，將差異大於設定值的點找出來 // P3 =&amp;gt; 輸出的閥值區域 // P4 =&amp;gt; Offset 值，比較後大於該值將被提取出來 // P5 =&amp;gt; 哪個區域 // light 原圖 &amp;gt;= 平滑後 + Offset // dark 原圖 &amp;lt;= 平滑後 - Offset // equal (平滑後 + Offset) &amp;lt; 原圖 &amp;lt; (平滑後 - Offset) // not_equal (平滑後 + Offset) &amp;gt;= 原圖 Or 原圖 &amp;gt;= (平滑後 - Offset) dyn_threshold(Image, ImageMean, RegionDynThresh, 4, &amp;#39;not_equal&amp;#39;) Var_Threshold // P3, P4 =&amp;gt; Mask 長寬 // P5 =&amp;gt; 標準差因子 // P6 =&amp;gt; 絕對閥值 // P7 =&amp;gt; dark, light, equal, not_equal var_threshold(Image, Region, 15, 15, 0.</description></item><item><title>AvaloniaUI 踩坑紀錄</title><link>http://example.org/posts/2022-03-21-avaloniaui-first/</link><pubDate>Mon, 21 Mar 2022 19:45:10 +0800</pubDate><guid>http://example.org/posts/2022-03-21-avaloniaui-first/</guid><description>前言 從.Net Framework到.Net，微軟的C#終於可以跨平台，跑在Linux、Docker Container，但是桌面應用程式WinForm、WPF依然只能Windows，然而有個開源項目Avalonia卻是以WPF的風格做出跨平台的桌面應用程式，雖然在各方面都還不構成熟，我們期待它未來的發展。
環境建置 Dotnet 樣板 下載樣板 Avalonia Dotnet Template
安裝樣板
dotnet new –install [path-to-repository]
Avalonia 樣板 範本名稱 簡短名稱 語言 標記 Avalonia .NET Core App avalonia.app [C#],F# ui/xaml/avalonia/avaloniaui Avalonia .NET Core MVVM App avalonia.mvvm [C#],F# ui/xaml/avalonia/avaloniaui Avalonia UserControl avalonia.usercontrol [C#],F# ui/xaml/avalonia/avaloniaui Avalonia Window avalonia.window [C#],F# ui/xaml/avalonia/avaloniaui Avalonia TemplatedControl avalonia.</description></item><item><title>好用工具 Wox</title><link>http://example.org/posts/2022-03-20-tools-wox/</link><pubDate>Sun, 20 Mar 2022 13:20:58 +0800</pubDate><guid>http://example.org/posts/2022-03-20-tools-wox/</guid><description>Windows 快捷列軟體（Wox），她號稱是 Windows 上的 Alfred ，透過一條小小的搜尋列，可以開啟軟體、搜尋檔案、查詢網頁，並透過安裝外掛還能當作計算機、翻譯器、剪貼簿等來使用。
基本功能 Everything 電腦需要安裝 Everything 軟體，功能是可以直接搜尋電腦裡的檔案，直接開啟。
網頁搜尋 g =&amp;gt; google 搜尋 translate =&amp;gt; google 翻譯 youtube =&amp;gt; youtube 搜尋 maps =&amp;gt; google map 搜尋 image =&amp;gt; google image 搜尋 wiki =&amp;gt; wiki 搜尋 好用插件 Dictionary wpm install Dictionary
使用畫面 前置作業 先下載此檔案，放到C:\Users{用户名}\AppData\Roaming\Wox\Plugins\Dictionary-{随机字符}\dicts里才可以正常使用！ 注意：近义词查找需要手动申请Token并在设置页面里填写才能正常使用！
使用方式
基本查詢 d &amp;lt;Word&amp;gt; 音標 d &amp;lt;Word&amp;gt;! 中文解釋 d &amp;lt;Word&amp;gt;!t 接近的單字 d &amp;lt;Word&amp;gt;!s 其他變形 d &amp;lt;Word&amp;gt;!</description></item><item><title>ARP 協議</title><link>http://example.org/posts/2022-03-19-arp-protocol/</link><pubDate>Sat, 19 Mar 2022 10:58:28 +0800</pubDate><guid>http://example.org/posts/2022-03-19-arp-protocol/</guid><description>說明 ARP全名為Address Resolution Protocol （位置發現協議），在網路鏈路層上傳遞封包都需要知道目的的Mac Address，但在網路曾是使用網路層地止IP Address，所以需要透過ARP協議去廣播，詢問對方的Mac Address。
ARP 運作 ARP運作方式相當簡單，一個是ARP 詢問（ARP Request），一個是ARP 答復（ARP Reply）。
透過發送ARP Request去廣過，區域網路上的所有電腦，詢問IP地址的MAC地址是多少，如果收到網播的電腦不是這個IP地址就會忽略它，但收到的電腦剛好是這個IP地址，就會進行ARP Reply回應自己的MAC地址。由於路由器會阻擋區域網路中的廣播封包，所以ARP只能詢問同一個網路。
每一台電腦上都有自己的ARP快取，同一個地址一段時間只會詢問一次，避免廣播風暴的發生，另外也可以使用靜態ARP設定，這樣就不需要詢問，但是這兩種方式只要重新開機都會清空。
ARP 指令 查詢ARP記錄 可以利用 arp -a 指令來查詢電腦中所儲存的ARP記錄
C:\&amp;gt; arp -a Interface: 192.168.1.128 --- 0x10 Internet Address Physical Address Type 192.168.1.1 c0-06-c3-3b-5b-ec dynamic 192.168.1.255 ff-ff-ff-ff-ff-ff static 224.0.0.2 01-00-5e-00-00-02 static 224.0.0.22 01-00-5e-00-00-16 static 224.0.0.251 01-00-5e-00-00-fb static 224.0.0.252 01-00-5e-00-00-fc static 239.255.255.250 01-00-5e-7f-ff-fa static 新增靜態APR記錄 利用 arp -s &amp;lt;IP地址&amp;gt; &amp;lt;MAC地址&amp;gt; 新增靜態地址
C:\&amp;gt; arp -s 203.74.205.42 00-00-e8-97-73-86 刪除APR記錄 可利用 arp -d 刪除全部或 arp -d &amp;lt;IP地址&amp;gt; 刪除指定IP的方式。</description></item><item><title>Search Results</title><link>http://example.org/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://example.org/search/</guid><description/></item></channel></rss>